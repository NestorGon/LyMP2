// DO NOT EDIT THIS FILE! IT IS AUTOMATICALLY GENERATED FROM FILE "src/P2Deco.gold"
import gold.*;
import gold.structures.*;
import gold.structures.automaton.*;
import gold.structures.bag.*;
import gold.structures.collection.*;
import gold.structures.deque.*;
import gold.structures.disjointset.*;
import gold.structures.graph.*;
import gold.structures.heap.*;
import gold.structures.list.*;
import gold.structures.map.*;
import gold.structures.multimap.*;
import gold.structures.point.*;
import gold.structures.queue.*;
import gold.structures.set.*;
import gold.structures.stack.*;
import gold.structures.tree.*;
import gold.structures.tree.binary.*;
import gold.structures.tree.nary.*;
import gold.structures.tuple.*;
import gold.structures.turingMachine.*;
import gold.swing.*;
import gold.swing.icon.*;
import gold.swing.icon.ajaxload.*;
import gold.swing.icon.famfamfam.*;
import gold.swing.icon.gold.*;
import gold.swing.icon.jlfgr.*;
import gold.swing.icon.wikimedia.*;
import gold.swing.icon.windows.*;
import gold.swing.look.*;
import gold.swing.util.*;
import gold.test.*;
import gold.test.automaton.*;
import gold.test.general.*;
import gold.test.graph.*;
import gold.util.*;
import gold.visualization.*;
import gold.visualization.automaton.*;
import gold.visualization.graph.*;
import gold.visualization.quadtree.*;
import gold.visualization.turingMachine.*;
import gold.visualization.util.*;
import java.lang.*;
import org.apfloat.*;
import static gold.util.GReflection.*;
@SuppressWarnings("all")
public final class P2Deco {
  static {
    gold.swing.util.GUtilities.installGoldLookAndFeel();
  }
  public static Object M=null;
  public static Object alf=null;
  public static void main(String[] args) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=8;
      java.util.Scanner sc=null;
      sc=$invokeConstructor(java.util.Scanner.class,new Object[]{$invokeField(System.class,"in",true,null)});
      $line=9;
      Object decoder=$fix(P2Deco.createDecoder());
      $line=15;
      Utilities.test($cast(gold.structures.automaton.IAutomaton.class,decoder));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P2Deco.class,"main",$line);
    }
  }
  public static ITransducer createDecoder() {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=20;
      M=$fix($opIntvlY('A','D'));
      $line=21;
      alf=$fix($opIntvlY('a','d'));
      $line=22;
      Object A=$fix($opUnionY(alf,GCollections.asSet("",'#')));
      $line=23;
      Object AA=$fix($opUnionY(A,M));
      $line=24;
      Object B=$fix($opCartsY(new Object[]{$opIntvlY(0,2),$opIntvlY(0,4)}));
      $line=25;
      Object C=$fix($opUnionY($opCartsY(new Object[]{A,B}),GCollections.asSet(GCollections.asList(':',GCollections.asList(1,0)))));
      $line=26;
      Object D=$fix($opCartsY(new Object[]{A,A}));
      $line=27;
      Object Q=$fix($opUnionY($opUnionY(D,$opCartsY(new Object[]{D,C})),GCollections.asSet('I',"num","err")));
      $line=28;
      Object \u03A3=$fix($opUnionY($opUnionY($opUnionY($opUnionY(alf,GCollections.asSet(':')),GCollections.asSet('#')),$opIntvlY('A','Z')),$opIntvlY('0','4')));
      $line=29;
      Object \u03A3_=$fix($opUnionY($opUnionY(alf,GCollections.asSet(':')),GCollections.asSet('$')));
      $line=30;
      Object q_0=$fix('I');
      $line=31;
      Object F=$fix(GCollections.asSet("num"));
      $line=33;
      $result=$invokeConstructor(GDeterministicTransducer.class,new Object[]{Q,\u03A3,\u03A3_,q_0,F,new GMethod(P2Deco.class,"\u03B4"),new GMethod(P2Deco.class,"g"),new GMethod(P2Deco.class,"h")});
      if (true) break $try;
      $line=34;
      $rethrow(new RuntimeException("The function \"createDecoder()\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P2Deco.class,"createDecoder",$line);
    }
    return $cast(ITransducer.class,$result);
  }
  public static Object \u03B4(Object A, Object n) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=39;
      if (($opEqualY(A,'I')&&$opMembrY(n,alf))) {
        $line=40;
        $result=GCollections.asList(n,"");
        if (true) break $try;
      }
      else {
        $line=42;
        $result="err";
        if (true) break $try;
      }
      $line=44;
      $rethrow(new RuntimeException("The function \"\u03B4(A:Object,n:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P2Deco.class,"\u03B4",$line);
    }
    return $result;
  }
  public static Object \u03B4(java.lang.Iterable $v1, Object n) {
    int $line=0;
    Object $result=null;
    $try:try {
      java.util.Iterator $v2=GCollections.unmodifiableCollection($v1).iterator();
      Object A=$v2.next();
      Object B=$v2.next();
      $line=48;
      if (((($opMembrY(A,M)||$opMembrY(B,M))||$opEqualY(A,'#'))||$opEqualY(B,'#'))) {
        $line=49;
        $result="err";
        if (true) break $try;
      }
      else {
        $line=50;
        if ((($opEqualY(A,"")||$bool(((!$opMembrY(A,alf)&&$opGreatY($opAbsolY(A),1))&&$bool(($opEqualY($getArrayValue(A,new Object[]{0}),"")||$opEqualY($getArrayValue(A,new Object[]{1}),""))))))||$bool(((!$opMembrY(B,alf)&&$opGreatY($opAbsolY(B),1))&&$opEqualY($getArrayValue(B,new Object[]{0}),""))))) {
          $line=51;
          $result="err";
          if (true) break $try;
        }
        else {
          $line=52;
          if ($opMembrY(A,alf)) {
            $line=53;
            if (($opMembrY(B,alf)&&$opEqualY(n,':'))) {
              $line=54;
              $result=GCollections.asList(GCollections.asList(A,B),GCollections.asList(':',GCollections.asList(1,0)));
              if (true) break $try;
            }
            else {
              $line=55;
              if ((!$opMembrY(B,alf)&&$opMembrY(n,alf))) {
                $line=56;
                if (!$opEqualY(n,'#')) {
                  $line=57;
                  $result=GCollections.asList(A,n);
                  if (true) break $try;
                }
                else {
                  $line=59;
                  $result="err";
                  if (true) break $try;
                }
              }
              else {
                $line=62;
                $result="err";
                if (true) break $try;
              }
            }
          }
          else {
            $line=65;
            Object a=$fix($opModulY($opAdditY($getArrayValue(B,new Object[]{1,0}),1),3));
            $line=66;
            Object b=$fix($getArrayValue(B,new Object[]{1,1}));
            $line=68;
            if (($opEqualY(n,"num")&&$opEqualY($getArrayValue(B,new Object[]{0}),':'))) {
              $line=69;
              $result="err";
              if (true) break $try;
            }
            else {
              $line=70;
              if ($opEqualY(n,$getArrayValue(A,new Object[]{0}))) {
                $line=71;
                $result=GCollections.asList(A,GCollections.asList(n,GCollections.asList(a,$opModulY($opAdditY(b,1),5))));
                if (true) break $try;
              }
              else {
                $line=72;
                if ($opEqualY(n,$getArrayValue(A,new Object[]{1}))) {
                  $line=73;
                  $result=GCollections.asList(A,GCollections.asList(n,GCollections.asList(a,$opModulY($opAdditY(b,1),5))));
                  if (true) break $try;
                }
                else {
                  $line=74;
                  if (($opEqualY(n,P2Deco.toUpper($getArrayValue(A,new Object[]{0})))&&$opEqualY(a,2))) {
                    $line=75;
                    $result="err";
                    if (true) break $try;
                  }
                  else {
                    $line=76;
                    if (($opEqualY(n,P2Deco.nextToUpper($getArrayValue(A,new Object[]{0})))&&$opEqualY(a,1))) {
                      $line=77;
                      $result="err";
                      if (true) break $try;
                    }
                    else {
                      $line=78;
                      if (($opEqualY(n,P2Deco.toUpper($getArrayValue(A,new Object[]{1})))&&$opEqualY(a,2))) {
                        $line=79;
                        $result="err";
                        if (true) break $try;
                      }
                      else {
                        $line=80;
                        if (($opEqualY(n,P2Deco.nextToUpper($getArrayValue(A,new Object[]{1})))&&$opEqualY(a,1))) {
                          $line=81;
                          $result="err";
                          if (true) break $try;
                        }
                        else {
                          $line=82;
                          if (($opEqualY($getArrayValue(B,new Object[]{1,0}),0)&&$opMembrY(n,M))) {
                            $line=83;
                            $result="err";
                            if (true) break $try;
                          }
                          else {
                            $line=85;
                            if ($opEqualY(n,b)) {
                              $line=86;
                              $result="num";
                              if (true) break $try;
                            }
                            else {
                              $line=88;
                              if (($bool(($opEqualY(n,'#')||$opEqualY(n,$opIntvlY('0','4'))))&&$opEqualY($getArrayValue(B,new Object[]{0}),':'))) {
                                $line=89;
                                $result="err";
                                if (true) break $try;
                              }
                              else {
                                $line=91;
                                if (($opEqualY(a,0)&&$opMembrY(n,alf))) {
                                  $line=92;
                                  $result=GCollections.asList(A,GCollections.asList(n,GCollections.asList(a,b)));
                                  if (true) break $try;
                                }
                                else {
                                  $line=94;
                                  if (($opEqualY(a,1)&&$opMembrY(n,M))) {
                                    $line=95;
                                    $result=GCollections.asList(A,GCollections.asList(P2Deco.backToDown(n),GCollections.asList(a,$opModulY($opAdditY(b,1),5))));
                                    if (true) break $try;
                                  }
                                  else {
                                    $line=97;
                                    if (($opEqualY(a,2)&&$opMembrY(n,M))) {
                                      $line=98;
                                      $result=GCollections.asList(A,GCollections.asList(P2Deco.toDown(n),GCollections.asList(a,$opModulY($opAdditY(b,1),5))));
                                      if (true) break $try;
                                    }
                                    else {
                                      $line=100;
                                      if ($opEqualY(n,'#')) {
                                        $line=101;
                                        $result=GCollections.asList(A,GCollections.asList($getArrayValue(B,new Object[]{0}),GCollections.asList(a,$opModulY($opAdditY(b,1),5))));
                                        if (true) break $try;
                                      }
                                      else {
                                        $line=103;
                                        if (($opEqualY(a,1)&&$opEqualY($getArrayValue(B,new Object[]{0}),P2Deco.backToDown(n)))) {
                                          $line=104;
                                          $result="err";
                                          if (true) break $try;
                                        }
                                        else {
                                          $line=106;
                                          if (($opEqualY(a,2)&&$opEqualY($getArrayValue(B,new Object[]{0}),P2Deco.toDown(n)))) {
                                            $line=107;
                                            $result="err";
                                            if (true) break $try;
                                          }
                                          else {
                                            $line=110;
                                            $result="err";
                                            if (true) break $try;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      $line=113;
      $rethrow(new RuntimeException("The function \"\u03B4(\u27E8A,B\u27E9:java.lang.Iterable,n:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P2Deco.class,"\u03B4",$line);
    }
    return $result;
  }
  public static Object h(Object A, Object n) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=116;
      if (($opEqualY(A,'I')&&!$opMembrY(n,alf))) {
        $line=117;
        $result="";
        if (true) break $try;
      }
      else {
        $line=118;
        if ($opEqualY(A,'I')) {
          $line=119;
          $result=n;
          if (true) break $try;
        }
        else {
          $line=121;
          $result="";
          if (true) break $try;
        }
      }
      $line=123;
      $rethrow(new RuntimeException("The function \"h(A:Object,n:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P2Deco.class,"h",$line);
    }
    return $result;
  }
  public static Object h(java.lang.Iterable $v3, Object n) {
    int $line=0;
    Object $result=null;
    $try:try {
      java.util.Iterator $v4=GCollections.unmodifiableCollection($v3).iterator();
      Object A=$v4.next();
      Object B=$v4.next();
      $line=126;
      if (((($opMembrY(A,M)||$opMembrY(B,M))||$opEqualY(A,'#'))||$opEqualY(B,'#'))) {
        $line=127;
        $result="";
        if (true) break $try;
      }
      else {
        $line=128;
        if ((($opEqualY(A,"")||$bool((!$opMembrY(A,alf)&&$bool(($opEqualY($getArrayValue(A,new Object[]{0}),"")||$opEqualY($getArrayValue(A,new Object[]{1}),""))))))||$bool(((!$opMembrY(B,alf)&&$opGreatY($opAbsolY(B),1))&&$opEqualY($getArrayValue(B,new Object[]{0}),""))))) {
          $line=129;
          $result="";
          if (true) break $try;
        }
        else {
          $line=130;
          if ($opMembrY(A,alf)) {
            $line=131;
            if (($opMembrY(B,alf)&&$opEqualY(n,':'))) {
              $line=132;
              $result=':';
              if (true) break $try;
            }
            else {
              $line=133;
              if ((!$opMembrY(B,alf)&&$opMembrY(n,alf))) {
                $line=134;
                $result=n;
                if (true) break $try;
              }
              else {
                $line=136;
                $result="";
                if (true) break $try;
              }
            }
          }
          else {
            $line=139;
            if ($opEqualY(n,':')) {
              $line=140;
              $result="";
              if (true) break $try;
            }
            else {
              $line=141;
              if ($opEqualY(n,$opIntvlY('0','4'))) {
                $line=142;
                $result='$';
                if (true) break $try;
              }
              else {
                $line=143;
                if ($opEqualY(n,$getArrayValue(A,new Object[]{0}))) {
                  $line=144;
                  $result=$getArrayValue(A,new Object[]{1});
                  if (true) break $try;
                }
                else {
                  $line=145;
                  if ($opEqualY(n,$getArrayValue(A,new Object[]{1}))) {
                    $line=146;
                    $result=$getArrayValue(A,new Object[]{0});
                    if (true) break $try;
                  }
                  else {
                    $line=147;
                    if ($opEqualY(n,'#')) {
                      $line=148;
                      $result=$getArrayValue(B,new Object[]{0});
                      if (true) break $try;
                    }
                    else {
                      $line=149;
                      if (((!$opMembrY(n,A)&&!$opEqualY(n,$getArrayValue(B,new Object[]{0})))&&$opEqualY($getArrayValue(B,new Object[]{1,0}),1))) {
                        $line=150;
                        $result=P2Deco.backToDown(n);
                        if (true) break $try;
                      }
                      else {
                        $line=151;
                        if (((!$opMembrY(n,A)&&!$opEqualY(n,$getArrayValue(B,new Object[]{0})))&&$opEqualY($getArrayValue(B,new Object[]{1,0}),2))) {
                          $line=152;
                          $result=P2Deco.toDown(n);
                          if (true) break $try;
                        }
                        else {
                          $line=154;
                          $result=n;
                          if (true) break $try;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      $line=157;
      $rethrow(new RuntimeException("The function \"h(\u27E8A,B\u27E9:java.lang.Iterable,n:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P2Deco.class,"h",$line);
    }
    return $result;
  }
  public static Object g(Object s) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=160;
      $result="";
      if (true) break $try;
      $line=161;
      $rethrow(new RuntimeException("The function \"g(s:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P2Deco.class,"g",$line);
    }
    return $result;
  }
  public static Object backToDown(Object n) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=164;
      Character r=null;
      r=$defaultValue(Character.class);
      $line=165;
      r=$cast(Character.class,$fix($opAdditY($opAdditY($opModulY($opSubtrY($opSubtrY(n,'a'),1),26),32),'a')));
      $line=166;
      $result=r;
      if (true) break $try;
      $line=167;
      $rethrow(new RuntimeException("The function \"backToDown(n:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P2Deco.class,"backToDown",$line);
    }
    return $result;
  }
  public static Object toDown(Object n) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=170;
      Character r=null;
      r=$defaultValue(Character.class);
      $line=171;
      r=$cast(Character.class,$fix($opAdditY($opAdditY($opSubtrY(n,'a'),32),'a')));
      $line=172;
      $result=r;
      if (true) break $try;
      $line=173;
      $rethrow(new RuntimeException("The function \"toDown(n:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P2Deco.class,"toDown",$line);
    }
    return $result;
  }
  public static Object nextToUpper(Object n) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=176;
      Character r=null;
      r=$defaultValue(Character.class);
      $line=177;
      r=$cast(Character.class,$fix($opAdditY($opSubtrY($opModulY($opAdditY($opSubtrY(n,'a'),1),26),32),'a')));
      $line=178;
      $result=r;
      if (true) break $try;
      $line=179;
      $rethrow(new RuntimeException("The function \"nextToUpper(n:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P2Deco.class,"nextToUpper",$line);
    }
    return $result;
  }
  public static Object toUpper(Object n) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=182;
      Character r=null;
      r=$defaultValue(Character.class);
      $line=183;
      r=$cast(Character.class,$fix($opAdditY($opSubtrY($opSubtrY(n,'a'),32),'a')));
      $line=184;
      $result=r;
      if (true) break $try;
      $line=185;
      $rethrow(new RuntimeException("The function \"toUpper(n:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P2Deco.class,"toUpper",$line);
    }
    return $result;
  }
}
